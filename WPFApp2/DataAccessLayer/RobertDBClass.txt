using System;
using System.Collections.Generic;
using Npgsql;


namespace SWE_TourPlanner_DataLayer
{
    public class DBConn
    {
        //static string  path = "C:\\Users\\rstic\\Documents\\SWE2_TourPlanner_Stickler\\SWE_DataLayer\\ConnectionData.txt";
        static string  path = "..\\..\\..\\..\\SWE_DataLayer\\Data\\ConnectionData.txt";

        private static DBConn _instance = null;
        private static NpgsqlConnection _databaseConnection;
        public int indicator { get; set; }

        //string query = "SELECT * FROM userdata WHERE UserName = 'admin'";
        static List<string> tempList = ReadTextFile.ReadFromTxt(path);
        private static readonly string ConnString = DBConn.BiuldConString(tempList);

        //muss protected sein pür singelton
        private DBConn()
        {
            //sollte die Db im konstruktor aufrufen
            SetConnect();
        }
        //Singelton added
        public static DBConn Instance()
        {
            if (_instance == null)
            {
                _instance = new DBConn();
            }
            return _instance;
        }

        public static void SetConnect()
        {
            try
            {
                _databaseConnection = new NpgsqlConnection(ConnString);
                _databaseConnection.Open();
                Console.WriteLine("Connection established");
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }
        }

        public static string BiuldConString(List<string> liste)
        {            
            string temp = "";

            foreach(var line in liste)
            {
                temp += line + " ";
            }
            temp += "SSLMode = Prefer";            
            return temp;
        }

        public List<string> GetDataFromDB(string query)
        {                       
            SetConnect();
            NpgsqlCommand commandDatabase = new NpgsqlCommand(query, _databaseConnection);
            List<string> stringList = new List<string>();

            try
            {
                //databaseConnection.Open();
                var myReader = commandDatabase.ExecuteReader();

                if (myReader.HasRows)
                {
                    Console.WriteLine("Query Generated result:");

                    //line is zunächst ein Object
                    while(myReader.Read())
                    {
                        int i = 0;
                        string temp = "";
                        while (myReader.FieldCount > i)
                        {
                            if(i == 0)
                            {
                                temp += myReader.GetString(i);
                            }
                            else
                            {
                                temp += ";" + myReader.GetString(i);
                            }
                            i++;
                        }
                        stringList.Add(temp);
                    }                    
                }
            }
            catch (Exception e)
            {
                throw new Exception (e.ToString());
            }
            _databaseConnection.Close();
            return stringList;
        }

        public bool ExecuteQuery(string query)
        {
            NpgsqlCommand commandDatabase = new NpgsqlCommand(query, _databaseConnection);
            commandDatabase.CommandTimeout = 60;
            try
            {
                _databaseConnection.Open();
                var myReader = commandDatabase.ExecuteReader();
            }
            catch (Exception e)
            {
                throw new Exception(e.ToString());
            }
            _databaseConnection.Close();
            return true;
        }
    }
}